<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
   		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<import resource="classpath:META-INF/idm-beans.xml" />
	<bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref local="authenticationProvider" />
			</list>
		</property>
	</bean>
	<bean id="webAccessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg>
			<list>
				<ref local="webExpressionVoter" />
				<ref local="authenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>
	<bean id="jsr250Voter"
		class="org.springframework.security.access.annotation.Jsr250Voter">
	</bean>
	<bean id="bizResourceVoter"
		class="com.fastbiz.core.web.spring.security.access.BizResourceAccessDecisionVoter">
		<property name="expressionHandler" ref="bizResourceSecurityExpressionHandler" />
	</bean>
	<bean id="bizResourceSecurityExpressionHandler"
		class="com.fastbiz.core.web.spring.security.access.BizResourceSecurityExpressionHandler">
		<property name="permissionEvaluator">
			<bean class="com.df.idm.authorization.RoleBasePermissionEvaluator" />
		</property>
	</bean>
	<bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter" />
	<bean id="webExpressionVoter"
		class="org.springframework.security.web.access.expression.WebExpressionVoter" />
	<bean id="authenticatedVoter"
		class="org.springframework.security.access.vote.AuthenticatedVoter" />
	<bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="webAccessDecisionManager" />
		<property name="securityMetadataSource" ref="securityInterceptorMetadataSource" />
	</bean>
	<bean id="exceptionTranslationFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
		<property name="accessDeniedHandler" ref="accessDeniedHandler" />
	</bean>
	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/secure/login" />
	</bean>
	<bean id="accessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<property name="errorPage" value="/accessDenied" />
	</bean>
	<bean id="multiTenantAuthenticationFilter"
		class="com.fastbiz.core.web.spring.security.authentication.MultiTenantAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="filterProcessesUrl" value="/secure/authenticate" />
		<property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
	</bean>
	<bean id="authenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/secure/login" />
		<property name="useForward" value="true" />
	</bean>
	<bean id="authenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/" />
	</bean>
	<bean id="channelProcessingFilter"
		class="org.springframework.security.web.access.channel.ChannelProcessingFilter">
		<property name="channelDecisionManager" ref="channelDecisionManager" />
		<property name="securityMetadataSource" ref="channelMetadataSource" />
	</bean>
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	<bean id="localeContextHolderFilter" class="com.fastbiz.core.locale.LocaleContextHolderFilter">
		<property name="localeResolver" ref="localeResolver" />
	</bean>
	<bean id="tenantContextBindFilter" class="com.fastbiz.core.tenant.TenantContextBindFilter" />
	<bean id="csrfTokenService" class="com.fastbiz.core.web.security.csrf.CSRFTokenServiceImpl" />
	<bean id="csrfTokenCheckFilter" class="com.fastbiz.core.web.security.csrf.CSRFTokenCheckFilter">
		<property name="CSRFTokenService" ref="csrfTokenService" />
	</bean>
	<bean id="securityContextPersistenceFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />
	<bean id="channelDecisionManager"
		class="org.springframework.security.web.access.channel.ChannelDecisionManagerImpl">
		<property name="channelProcessors">
			<list>
				<ref bean="secureChannelProcessor" />
				<ref bean="insecureChannelProcessor" />
			</list>
		</property>
	</bean>
	<sec:filter-security-metadata-source
		id="securityInterceptorMetadataSource" use-expressions="true">
		<sec:intercept-url pattern="/**" access="isAuthenticated()" />
	</sec:filter-security-metadata-source>
	<sec:filter-security-metadata-source
		id="channelMetadataSource">
		<sec:intercept-url pattern="/**/secure/**" access="REQUIRES_SECURE_CHANNEL" />
	</sec:filter-security-metadata-source>
	<bean id="secureChannelProcessor"
		class="org.springframework.security.web.access.channel.SecureChannelProcessor" />
	<bean id="insecureChannelProcessor"
		class="org.springframework.security.web.access.channel.InsecureChannelProcessor" />
	<sec:global-method-security
		pre-post-annotations="disabled" />
	<bean id="springSecurityFilterChain" name="org.springframework.security.filterChainProxy"
		class="org.springframework.security.web.FilterChainProxy">
		<sec:filter-chain-map path-type="ant">
			<sec:filter-chain pattern="/secure/authenticate"
				filters="channelProcessingFilter,localeContextHolderFilter,securityContextPersistenceFilter,multiTenantAuthenticationFilter" />
			<sec:filter-chain pattern="/secure/login"
				filters="channelProcessingFilter,localeContextHolderFilter" />
			<sec:filter-chain pattern="/static/**" filters="none" />
			<sec:filter-chain pattern="/**/permitted/**"
				filters="channelProcessingFilter,localeContextHolderFilter,securityContextPersistenceFilter,tenantContextBindFilter" />
			<sec:filter-chain pattern="/**"
				filters="channelProcessingFilter,localeContextHolderFilter,securityContextPersistenceFilter,tenantContextBindFilter,exceptionTranslationFilter,filterSecurityInterceptor,csrfTokenCheckFilter" />
		</sec:filter-chain-map>
	</bean>
</beans>