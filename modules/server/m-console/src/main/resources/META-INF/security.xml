<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">
	<import resource="classpath:META-INF/idm-beans.xml" />
	<sec:debug />
	<sec:global-method-security
		pre-post-annotations="enabled">
		<sec:expression-handler ref="tenantLevelSecurityExpressionHandler" />
	</sec:global-method-security>
	<bean id="secureChannelProcessor"
		class="org.springframework.security.web.access.channel.SecureChannelProcessor" />
	<bean id="insecureChannelProcessor"
		class="org.springframework.security.web.access.channel.InsecureChannelProcessor" />
	<bean id="channelDecisionManager"
		class="org.springframework.security.web.access.channel.ChannelDecisionManagerImpl">
		<property name="channelProcessors">
			<list>
				<ref bean="secureChannelProcessor" />
				<ref bean="insecureChannelProcessor" />
			</list>
		</property>
	</bean>
	<bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<property name="userDetailsService" ref="userObjectService" />
		<property name="key" value="Oba.2247d" />
	</bean>
	<bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<property name="key" value="Oba.2247d" />
	</bean>
	<bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="basicAuthenticationProvider" />
				<ref bean="rememberMeAuthenticationProvider" />
			</list>
		</property>
	</bean>
	<bean id="webAccessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg>
			<list>
				<ref bean="webExpressionVoter" />
			</list>
		</constructor-arg>
	</bean>
	<bean id="webExpressionVoter"
		class="org.springframework.security.web.access.expression.WebExpressionVoter">
		<property name="expressionHandler" ref="webSecurityExpressionHandler" />
	</bean>
	<bean id="webSecurityExpressionHandler"
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
		<property name="permissionEvaluator" ref="permissionEvaluator" />
	</bean>
	<bean id="permissionEvaluator" class="com.df.idm.authorization.RoleBasePermissionEvaluator" />
	<bean id="tenantLevelSecurityExpressionHandler"
		class="com.df.idm.authorization.TenantLevelMethodSecurityExpressionHandler">
		<property name="permissionEvaluator" ref="permissionEvaluator" />
	</bean>
	<bean id="FILTER_SECURITY_INTERCEPTOR"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="webAccessDecisionManager" />
		<property name="securityMetadataSource" ref="securityInterceptorMetadataSource" />
	</bean>
	<bean id="EXCEPTION_TRANSLATION_FILTER"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
		<property name="accessDeniedHandler" ref="accessDeniedHandler" />
	</bean>
	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/auth/login.html" />
	</bean>
	<bean id="accessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<property name="errorPage" value="/auth/accessDenied.html" />
	</bean>
	<bean id="ANONYMOUS_AUTHENTICATION_FILTER"
		class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		<constructor-arg index="0" value="test" />
		<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
	</bean>
	<bean id="ANTHENTICATION_FILTER"
		class="com.df.idm.authentication.MailOrCellPhoneAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="filterProcessesUrl" value="/auth/basic" />
		<property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
		<property name="rememberMeServices" ref="rememberMeServices" />
	</bean>
	<bean id="authenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/auth/login.html" />
		<property name="useForward" value="true" />
	</bean>
	<bean id="authenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/" />
	</bean>
	<bean id="LOCALE_CONTEXT_FILTER" class="com.df.core.web.LocaleContextHolderFilter">
		<property name="localeResolver">
			<bean class="com.df.core.web.SessionLocaleResolver" />
		</property>
	</bean>
	<bean id="LOGUT_FILTER"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg index="0" value="/" />
		<constructor-arg index="1">
			<list>
				<bean
					class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
		<property name="logoutRequestMatcher">
			<bean class="org.springframework.security.web.util.AntPathRequestMatcher">
				<constructor-arg index="0" value="/auth/logout" />
			</bean>
		</property>
	</bean>
	<bean id="REMEMBER_ME_FILTER"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<property name="rememberMeServices" ref="rememberMeServices" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>
	<bean id="DIRECT_AUTHENTICATION_FILTER" class="com.df.idm.authentication.DirectAuthenticationFilter">
		<property name="processUrl" value="/auth/direct" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="objectMapper">
			<bean class="com.df.core.json.ext.ObjectMapperFactoryBean" />
		</property>
	</bean>
	<bean id="CHANNEL_FILTER"
		class="org.springframework.security.web.access.channel.ChannelProcessingFilter">
		<property name="channelDecisionManager" ref="channelDecisionManager" />
		<property name="securityMetadataSource" ref="channelMetadataSource" />
	</bean>
	<bean id="TENANT_CONTEXT_CLEAR_FILTER" class="com.df.core.common.context.TenantContextClearFilter" />
	<bean id="OAUTH2_CLIENT_CONTEXT_FILTER"
		class="org.springframework.security.oauth2.client.filter.OAuth2ClientContextFilter" />
	<bean id="SINA_OAUTH2_CLIENT_AUTHENTICATION_FILTER"
		class="com.df.idm.authentication.oauth2.DefaultOAuth2ClientAuthenticationFilter">
		<constructor-arg index="0" value="/sina/oauth2" />
		<property name="resourceInterface" ref="sinaOAuth2ResourceInterface" />
		<property name="userManagementService" ref="userManagementService" />
	</bean>
	<bean id="sinaOAuth2ResourceInterface"
		class="com.df.idm.authentication.oauth2.sina.SinaOAuth2ResourceInterface">
		<constructor-arg index="0" ref="sinaOAuthResource" />
		<constructor-arg index="1" ref="sinaOAuthClientContext" />
	</bean>
	<bean id="sinaOAuthClientContext"
		class="org.springframework.security.oauth2.client.DefaultOAuth2ClientContext"
		scope="session">
		<constructor-arg index="0" ref="accessTokenRequest" />
		<aop:scoped-proxy />
	</bean>
	<bean id="accessTokenRequest"
		class="org.springframework.security.oauth2.client.token.DefaultAccessTokenRequest"
		scope="request">
		<aop:scoped-proxy />
	</bean>
	<bean id="sinaOAuthResource"
		class="org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails">
		<property name="clientId" value="1318036310" />
		<property name="clientSecret" value="1bd12cbd47c392ebf8e49fbe88782d1a" />
		<property name="accessTokenUri" value="https://api.weibo.com/oauth2/access_token" />
		<property name="userAuthorizationUri" value="https://api.weibo.com/oauth2/authorize" />
		<property name="grantType" value="authorization_code" />
		<property name="clientAuthenticationScheme" value="query" />
		<property name="preEstablishedRedirectUri" value="http://www.longertec.com/m-console/sina/oauth2" />
	</bean>
	<bean id="SECURITY_CONTEXT_FILTER"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />
	<bean id="CSRF_FILTER" class="org.springframework.security.web.csrf.CsrfFilter">
		<constructor-arg index="0" ref="csrfTokenRepository" />
		<property name="accessDeniedHandler" ref="accessDeniedHandler" />
	</bean>
	<bean id="csrfTokenRepository"
		class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
	</bean>
	<sec:filter-security-metadata-source
		id="securityInterceptorMetadataSource" use-expressions="true">
		<sec:intercept-url pattern="/rs/user" method="POST"
			access="isAnonymous()" />
		<sec:intercept-url pattern="/rs/**" method="GET"
			access="permitAll" />
		<sec:intercept-url pattern="/rs/**" access="isAuthenticated()" />
	</sec:filter-security-metadata-source>
	<sec:filter-security-metadata-source
		id="channelMetadataSource">
		<sec:intercept-url pattern="/secure/**" access="REQUIRES_SECURE_CHANNEL" />
	</sec:filter-security-metadata-source>
	<bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
		<sec:filter-chain-map path-type="ant">
			<sec:filter-chain pattern="/**/*.jpg" filters="none" />
			<sec:filter-chain pattern="/**/*.gif" filters="none" />
			<sec:filter-chain pattern="/**/*.tif" filters="none" />
			<sec:filter-chain pattern="/**/*.png" filters="none" />
			<sec:filter-chain pattern="/image/**" filters="none" />
			<sec:filter-chain pattern="/**/*.js" filters="none" />
			<sec:filter-chain pattern="/**/*.css" filters="none" />
			<sec:filter-chain pattern="/auth/*.html" filters="none" />
			<sec:filter-chain pattern="/auth/**"
				filters="CHANNEL_FILTER,SECURITY_CONTEXT_FILTER,LOCALE_CONTEXT_FILTER,LOGUT_FILTER,DIRECT_AUTHENTICATION_FILTER,TENANT_CONTEXT_CLEAR_FILTER" />
			<sec:filter-chain pattern="/sina/oauth2"
				filters="SECURITY_CONTEXT_FILTER,LOCALE_CONTEXT_FILTER,OAUTH2_CLIENT_CONTEXT_FILTER,SINA_OAUTH2_CLIENT_AUTHENTICATION_FILTER,TENANT_CONTEXT_CLEAR_FILTER" />
			<sec:filter-chain pattern="/rs/**"
				filters="CHANNEL_FILTER,SECURITY_CONTEXT_FILTER,LOCALE_CONTEXT_FILTER, REMEMBER_ME_FILTER, ANONYMOUS_AUTHENTICATION_FILTER,FILTER_SECURITY_INTERCEPTOR, EXCEPTION_TRANSLATION_FILTER,
				TENANT_CONTEXT_CLEAR_FILTER"
				/>
		</sec:filter-chain-map>
	</bean>
</beans>